{"version":3,"file":"static/js/817.21b674c7.chunk.js","mappings":"oJA+CA,QAZA,SAAwBA,GACpB,MAAMC,GAAaC,EAAAA,EAAAA,QAAO,MAI1B,OAlCJ,SAA2BC,EAAKC,IAC5BC,EAAAA,EAAAA,YAAU,KAIN,SAASC,EAAmBC,GACpBJ,EAAIK,UAAYL,EAAIK,QAAQC,SAASF,EAAMG,UACtCC,SAASC,cAAc,YAAYC,UAAUJ,SAAS,0BACvDE,SAASC,cAAc,YAAYC,UAAUC,OAAO,wBACpDH,SAASC,cAAc,gBAAgBC,UAAUC,OAAO,UACxDH,SAASC,cAAc,iBAAiBC,UAAUC,OAAO,UACrDV,KACAO,SAASC,cAAc,gBAAgBC,UAAUC,OAAO,WAIxE,CAGA,OADAH,SAASI,iBAAiB,YAAaT,GAChC,KAEHK,SAASK,oBAAoB,YAAaV,EAAmB,CAChE,GACF,CAACH,EAAKC,GACb,CAQIa,CAAkBhB,EADFD,EAAMI,UAGfc,EAAAA,EAAAA,KAAA,OAAKf,IAAKF,EAAWkB,SAAEnB,EAAMmB,UACxC,C","sources":["components/OutsideAlerter.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref, isPhone) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                if (!document.querySelector(\".sidebar\").classList.contains(\"-translate-x-[11rem]\")) {\n                    document.querySelector(\".sidebar\").classList.toggle(\"-translate-x-[11rem]\");\n                    document.querySelector(\"#menu-button\").classList.toggle(\"hidden\");\n                    document.querySelector(\"#close-button\").classList.toggle(\"hidden\");\n                    if (isPhone()) {\n                        document.querySelector(\".open-button\").classList.toggle(\"hidden\");\n                    }\n                }\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref, isPhone]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n    const wrapperRef = useRef(null);\n    const isPhone = props.isPhone;\n    useOutsideAlerter(wrapperRef, isPhone);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nOutsideAlerter.propTypes = {\n    children: PropTypes.element.isRequired\n};\n\nexport default OutsideAlerter;"],"names":["props","wrapperRef","useRef","ref","isPhone","useEffect","handleClickOutside","event","current","contains","target","document","querySelector","classList","toggle","addEventListener","removeEventListener","useOutsideAlerter","_jsx","children"],"sourceRoot":""}